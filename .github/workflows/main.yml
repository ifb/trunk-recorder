---
name: Deploy

concurrency:
  group: production
  cancel-in-progress: true

on:
  # Enable manual running of action if necessary
  workflow_dispatch:
  # Build and deploy the image on pushes to main branch
  push:
    # Only publish on push to main branch
    branches:
      - main
    # Don't trigger if it's just a documentation update
    paths-ignore:
      - "**.md"
      - "**.MD"
      - "**.yml"
      - "LICENSE"
      - ".gitattributes"
      - ".gitignore"
      - ".dockerignore"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.MD"
      - "**.yml"
      - "LICENSE"
      - ".gitattributes"
      - ".gitignore"
      - ".dockerignore"

  # Build and deploy the image nightly (to ensure we pick up any security updates)
  # schedule:
  #   - cron: "0 12 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy_ghcr:
    name: Deploy image to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Check out our code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      # Set up buildx for multi platform builds
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/ifb/trunk-recorder
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/ifb/trunk-recorder
          labels: ${{ steps.meta.outputs.labels }}